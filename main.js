!function(){"use strict";var e="",t=document.querySelector(".popup"),r=document.querySelector(".popup_image"),n=document.querySelector(".popup_add"),o=document.querySelector(".popup_photo-user"),i=document.querySelector(".button_profile"),c=document.querySelector(".button_add"),u=document.querySelector(".profile__overlay"),a=document.querySelector(".button_close"),l=n.querySelector(".button_close"),s=r.querySelector(".button_close_image"),f=document.querySelector("img#close-remove"),p=document.querySelector(".button_close_photo-user"),d=document.querySelector(".cards"),y=document.querySelector(".popup__container"),m=n.querySelector(".popup__container"),v=o.querySelector(".popup__container-photo-user"),h=document.querySelector(".popup_remove"),b=(document.querySelector(".card__remove-icon"),t.querySelector(".button_submit")),_=n.querySelector(".button_submit"),S=h.querySelector(".button_submit_confirm"),g=o.querySelector(".button_submit"),k={formSelector:".popup__field",inputSelector:".popup__field-txt",errorSelector:".popup__input-error",submitButtonSelector:".button_submit",inactiveButtonClass:"button_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"};function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function E(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==w(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===w(o)?o:String(o)),n)}var o}var j=function(){function e(t){var r=t.nameSelector,n=t.roleSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=r,this._role=n,this._nameInput=document.querySelector(".name-input"),this._roleInput=document.querySelector(".role-input")}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){var e=document.querySelector(this._name),t=document.querySelector(this._role);this._nameInput.value=e.textContent,this._roleInput.value=t.textContent}},{key:"setUserInfo",value:function(){document.querySelector(this._name).textContent=this._nameInput.value,document.querySelector(this._role).textContent=this._roleInput.value}}])&&E(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function C(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==P(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==P(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===P(o)?o:String(o)),n)}var o}var L=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._form=r}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){this._form.querySelectorAll(this._config.inputSelector).forEach(this._setEventListeners.bind(this))}},{key:"_showInputError",value:function(e,t,r){e.classList.add(this._config.errorClass),e.textContent=t,r.classList.add(this._config.inputErrorClass)}},{key:"_hideInputError",value:function(e,t){e.classList.remove(this._config.errorClass),e.textContent="",t.classList.remove(this._config.inputErrorClass)}},{key:"_setEventListeners",value:function(e){e.addEventListener("input",this._validateInput.bind(this))}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleStateButton",value:function(e,t){this._hasInvalidInput(t)?(e.disabled=!0,e.classList.add(this._config.inactiveButtonClass)):(e.disabled=!1,e.classList.remove(this._config.inactiveButtonClass))}},{key:"_validateInput",value:function(e){var t=e.target,r=this._form.querySelector(this._config.submitButtonSelector),n=t.closest(this._config.formSelector).querySelector(this._config.errorSelector),o=Array.from(this._form.querySelectorAll(this._config.inputSelector));t.validity.valid?(this._hideInputError(n,t),this._toggleStateButton(r,o)):(this._showInputError(n,t.validationMessage,t),this._toggleStateButton(r,o))}}])&&C(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function I(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==O(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==O(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===O(o)?o:String(o)),n)}var o}var q=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._imageUrl=t.imageUrl,this._cardId=t.cardId,this._likes=t.likes,this._ownerId=t.ownerId,this._cardSelector=r.cardSelector,this._handleImageClick=r.handleImageClick,this._checkId=r.checkId,this._handleDeleteClick=r.handleDeleteClick,this._submitDeletePopup=r.submitDeletePopup,this._handleLikeClick=r.handleLikeClick,this._isLiked=r.isLiked}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){this._element=this._getTemplate(),this._setEventListener();var e=this._element.querySelector(".card__title"),t=this._element.querySelector(".card__image"),r=this._element.querySelector(".card__counter"),n=this._element.querySelector(".card__remove-icon");return this._checkId(this._ownerId,n),e.textContent=this._name,t.src=this._imageUrl,t.alt=this._name,r.innerHTML=this._likes.length,this._element}},{key:"_setEventListener",value:function(){var e=this,t=this._element.querySelector(".card__remove-icon"),r=this._element.querySelector(".card__image"),n=this._element.querySelector(".card__like");this._isLiked(this._likes,n),n.addEventListener("click",(function(t){e._isLiked(e._likes,n),e._handleLikeClick(e._cardId,e._likes,e._element.querySelector(".card__counter")),t.target.classList.toggle("card__like_active")})),t.addEventListener("click",(function(){e._cardIdClicked=e._cardId,e._handleDeleteClick(e._cardIdClicked),h.addEventListener("submit",(function(){e._submitDeletePopup(),e._element.remove()}))})),r.addEventListener("click",(function(){e._handleImageClick(e._imageUrl,e._name)}))}}])&&I(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function x(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==T(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==T(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===T(o)?o:String(o)),n)}var o}var R=function(){function e(t,r){var n=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._containerSelector=document.querySelector(r),this._items=n,this._renderer=o}var t,r;return t=e,(r=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(){this._containerSelector.append(this._items)}}])&&x(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function D(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==U(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==U(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===U(o)?o:String(o)),n)}var o}var B=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,r;return t=e,(r=[{key:"open",value:function(){this._popup.classList.add("popup_show"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_show"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close(this._popup)}},{key:"setEventListeners",value:function(){var e=this;a.addEventListener("click",this.close()),this._popup.addEventListener("click",(function(t){t.target.classList.contains("popup__overflow")&&e.close(e._popup)}))}}])&&D(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function H(e){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H(e)}function M(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==H(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==H(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===H(o)?o:String(o)),n)}var o}function A(){return A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=N(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},A.apply(this,arguments)}function V(e,t){return V=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},V(e,t)}function N(e){return N=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},N(e)}var J=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&V(e,t)}(c,e);var t,r,n,o,i=(n=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=N(n);if(o){var r=N(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===H(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(){var e;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(e=i.call(this,".popup_image")).setEventListeners(),e}return t=c,(r=[{key:"open",value:function(e,t){var r=document.querySelector(".popup__link-image"),n=document.querySelector(".popup__legend-image");r.src=e,n.textContent=t,A(N(c.prototype),"open",this).call(this)}}])&&M(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(B);function G(e){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},G(e)}function z(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==G(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==G(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===G(o)?o:String(o)),n)}var o}function F(){return F="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=Q(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},F.apply(this,arguments)}function K(e,t){return K=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},K(e,t)}function Q(e){return Q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Q(e)}var W=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&K(e,t)}(c,e);var t,r,n,o,i=(n=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Q(n);if(o){var r=Q(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===G(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(e,t,r,n){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(o=i.call(this,t))._form=o._popup.querySelector(".form"),o._submitHandler=e,o._buttonElement=r,o._buttonPopup=n,o}return t=c,(r=[{key:"_getInputValues",value:function(){var e=this._form.querySelectorAll(".popup__field-txt"),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"open",value:function(){F(Q(c.prototype),"open",this).call(this),this._buttonElement.textContent="Salvar"}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitHandler(e._getInputValues()),e.close()}))}},{key:"close",value:function(){this._form.reset(),F(Q(c.prototype),"close",this).call(this)}}])&&z(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(B),X=e+"66cff89119b58975ea64.svg",Y=e+"b54a70a2aacac01cbad6.svg",Z=e+"6c7bf05444b9793fdf6e.svg",$=e+"bed8c136e13907f5eefb.svg";function ee(e){return ee="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ee(e)}function te(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==ee(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==ee(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===ee(o)?o:String(o)),n)}var o}var re=function(){function e(t){var r=t.baseUrl,n=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=r,this.headers=n}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(e){return fetch("".concat(this.baseUrl,"/users/me"),{method:"GET",headers:this.headers,user:e}).then((function(e){return e.ok?e.json():Promise.reject()}))}},{key:"getCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{method:"GET",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject()}))}},{key:"editProfile",value:function(e,t){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return e.ok?e.json():Promise.reject()}))}},{key:"createCards",value:function(e){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",body:JSON.stringify(e),headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject()}))}},{key:"deleteCards",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject()}))}},{key:"addLikeCards",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject()}))}},{key:"removeLikeCards",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject()}))}},{key:"updateImageUser",value:function(e){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",body:JSON.stringify({avatar:e}),headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject()}))}}])&&te(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function ne(e){return ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ne(e)}function oe(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==ne(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==ne(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===ne(o)?o:String(o)),n)}var o}function ie(){return ie="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=ue(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},ie.apply(this,arguments)}function ce(e,t){return ce=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ce(e,t)}function ue(e){return ue=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ue(e)}var ae=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ce(e,t)}(c,e);var t,r,n,o,i=(n=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ue(n);if(o){var r=ue(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===ne(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(e,t,r){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._submitHandler=t,n._form=n._popup.querySelector(".popup__container-confirm"),n._buttonElement=r,n}return t=c,(r=[{key:"getIdCard",value:function(e){this._elementId=e}},{key:"handleIdCard",value:function(){this._submitHandler(this._elementId)}},{key:"open",value:function(){ie(ue(c.prototype),"open",this).call(this),this._buttonElement.textContent="Sim"}},{key:"setEventListeners",value:function(){var e=this;ie(ue(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e.handleIdCard(),e.close()}))}},{key:"close",value:function(){ie(ue(c.prototype),"close",this).call(this)}}])&&oe(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(B),le=document.getElementById("header"),se=document.getElementById("line"),fe=document.getElementById("artist"),pe=document.getElementById("edition"),de=document.getElementById("create-card");le.src=X,se.src=Y,pe.src=Z,de.src=$;var ye=new re({baseUrl:"https://around.nomoreparties.co/v1/web_ptbr_04",headers:{authorization:"1c439799-4201-41a1-bc23-3ac75b525bca","Content-type":"application/json"}});ye.getUserInfo({avatar:document.querySelector(".profile__image").src,name:document.querySelector(".profile__artist").textContent,role:document.querySelector(".profile__text").textContent,_id:[]}).then((function(e){fe.src=e.avatar,document.querySelector(".profile__artist").innerHTML=e.name,document.querySelector(".profile__text").innerHTML=e.about;var t=new W((function(){var e=document.querySelector(".input-photo-user").value;ye.updateImageUser(e).then(),fe.src=e,setTimeout((function(){g.textContent="Salvando..."}),0)}),".popup_photo-user",g,fe);function r(e){ye.deleteCards(e).then(),setTimeout((function(){S.textContent="Salvando..."}),0)}var n=new ae(".popup_remove",r,S);ye.getCards().then((function(t){new R({items:t,renderer:function(t){var i=new q({name:t.name,imageUrl:t.link,cardId:t._id,likes:t.likes,ownerId:t.owner._id},{cardSelector:".card-template",handleImageClick:function(e,t){o.open(e,t)},checkId:function(t,r){t===e._id?r.classList.remove("card__remove-icon_hidden"):r.classList.add("card__remove-icon_hidden")},handleDeleteClick:function(e){n.open(),n.getIdCard(e)},submitDeletePopup:r,handleLikeClick:function(t,r,n){var o=r.findIndex((function(t){return t._id===e._id}));-1!==o?(ye.removeLikeCards(t),r.splice(o,1),n.innerHTML=r.length):(ye.addLikeCards(t),r.push(e),n.innerHTML=r.length)},isLiked:function(t,r){1==t.some((function(t){return t._id===e._id}))?r.classList.add("card__like_active"):r.classList.remove("card__like_active")}}).generateCard();return d.append(i),i}},".cards").renderItems(t)}));var o=new J,h=new W((function(){setTimeout((function(){b.textContent="Salvando..."}),0);var e=new j({nameSelector:".profile__artist",roleSelector:".profile__text"}),t=e.setUserInfo();ye.editProfile(e._nameInput.value,e._roleInput.value).then((function(){return t}))}),".popup",b,i),w=new W((function(t){var i=document.querySelector(".title-input"),c=document.querySelector(".link-input");setTimeout((function(){_.textContent="Salvando..."}),0);var u=new q({name:i.value,imageUrl:c.value,cardId:t._id,likes:[]},{cardSelector:".card-template",handleImageClick:function(e,t){o.open(e,t)},checkId:function(t,r){t===e._id&&r.classList.remove("card__remove-icon_hidden")},handleDeleteClick:function(e){n.open(),n.getIdCard(e)},submitDeletePopup:r,handleLikeClick:function(t,r,n){var o=r.findIndex((function(t){return t._id===e._id}));-1!==o?(ye.removeLikeCards(t),r.splice(o,1),n.innerHTML=r.length):(ye.addLikeCards(t),r.push(e),n.innerHTML=r.length)},isLiked:function(t,r){1==t.some((function(t){return t._id===e._id}))?r.classList.add("card__like_active"):r.classList.remove("card__like_active")}});ye.createCards({name:i.value,link:c.value}).then((function(e){u._cardId=e._id,u.likes=e.likes;var t=u.generateCard();return d.prepend(t),t}))}),".popup_add",_,c),E=new L(k,y),P=new L(k,m);new L(k,v).enableValidation(),P.enableValidation(),E.enableValidation(),h.setEventListeners(),w.setEventListeners(),o.setEventListeners(),n.setEventListeners(),t.setEventListeners(),u.addEventListener("click",(function(){return t.open()})),c.addEventListener("click",(function(){return w.open()})),l.addEventListener("click",(function(){return w.close()})),p.addEventListener("click",(function(){return t.close()})),i.addEventListener("click",(function(){return h.open(),new j({nameSelector:".profile__artist",roleSelector:".profile__text"},".popup").getUserInfo()})),s.addEventListener("click",(function(){return o.close()})),f.addEventListener("click",(function(){return n.close()})),a.addEventListener("click",(function(){return h.close()}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,